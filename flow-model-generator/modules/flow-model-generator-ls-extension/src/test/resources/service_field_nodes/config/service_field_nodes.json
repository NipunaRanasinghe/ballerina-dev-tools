{
  "source": "agent",
  "linePosition": {
    "line": 16,
    "offset": 101
  },
  "description": "",
  "flowModel": {
    "fileName": "agent",
    "nodes": [],
    "connections": [
      {
        "id": "40000",
        "metadata": {
          "label": "Class",
          "description": "OpenAiProvider is a client class that provides an interface for interacting with OpenAI language models.",
          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerinax_ai_1.1.0.png"
        },
        "codedata": {
          "node": "CLASS_INIT",
          "org": "ballerinax",
          "module": "ai",
          "object": "OpenAiProvider",
          "symbol": "init",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 8,
              "offset": 8
            },
            "endLine": {
              "line": 8,
              "offset": 72
            }
          },
          "sourceCode": "self._AgentServiceModel = check new (\"\", ai:GPT_3_5_TURBO_0613);"
        },
        "returning": false,
        "properties": {
          "apiKey": {
            "metadata": {
              "label": "API Key",
              "description": "The OpenAI API key"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "string",
            "value": "\"\"",
            "placeholder": "\"\"",
            "optional": false,
            "editable": true,
            "advanced": false,
            "hidden": false,
            "codedata": {
              "kind": "REQUIRED",
              "originalName": "apiKey"
            },
            "typeMembers": [
              {
                "type": "string",
                "packageInfo": "",
                "kind": "BASIC_TYPE",
                "selected": true
              }
            ]
          },
          "modelType": {
            "metadata": {
              "label": "Model Type",
              "description": "The OpenAI model name"
            },
            "valueType": "SINGLE_SELECT",
            "valueTypeConstraint": [
              "\"gpt-3.5-turbo-16k-0613\"",
              "\"gpt-3.5-turbo-0125\"",
              "\"gpt-3.5-turbo-1106\"",
              "\"gpt-3.5-turbo-0613\"",
              "\"gpt-3.5-turbo-0301\"",
              "\"gpt-3.5-turbo-16k\"",
              "\"gpt-3.5-turbo\"",
              "\"o1-2024-12-17\"",
              "\"o1\"",
              "\"o3-mini-2025-01-31\"",
              "\"o3-mini\"",
              "\"gpt-4-32k-0613\"",
              "\"gpt-4-32k-0314\"",
              "\"gpt-4-32k\"",
              "\"gpt-4-0613\"",
              "\"gpt-4-0314\"",
              "\"gpt-4\"",
              "\"gpt-4-vision-preview\"",
              "\"gpt-4-1106-preview\"",
              "\"gpt-4-turbo-preview\"",
              "\"gpt-4-0125-preview\"",
              "\"gpt-4-turbo-2024-04-09\"",
              "\"gpt-4-turbo\"",
              "\"gpt-4o-mini-2024-07-18\"",
              "\"gpt-4o-mini\"",
              "\"gpt-4o-2024-05-13\"",
              "\"gpt-4o-2024-08-06\"",
              "\"gpt-4o-2024-11-20\"",
              "\"gpt-4o\""
            ],
            "value": "ai:GPT_3_5_TURBO_0613",
            "placeholder": "\"gpt-3.5-turbo-16k-0613\"",
            "optional": false,
            "editable": true,
            "advanced": false,
            "hidden": false,
            "codedata": {
              "kind": "REQUIRED",
              "originalName": "modelType"
            },
            "typeMembers": [
              {
                "type": "OPEN_AI_MODEL_NAMES",
                "packageInfo": "ballerinax:ai:1.1.0",
                "kind": "BASIC_TYPE",
                "selected": false
              }
            ]
          },
          "serviceUrl": {
            "metadata": {
              "label": "Service URL",
              "description": "The base URL of OpenAI API endpoint"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "string",
            "placeholder": "\"\"",
            "optional": true,
            "editable": true,
            "advanced": true,
            "hidden": false,
            "codedata": {
              "kind": "DEFAULTABLE",
              "originalName": "serviceUrl"
            },
            "typeMembers": [
              {
                "type": "string",
                "packageInfo": "",
                "kind": "BASIC_TYPE",
                "selected": false
              }
            ]
          },
          "maxTokens": {
            "metadata": {
              "label": "Maximum Tokens",
              "description": "The upper limit for the number of tokens in the response generated by the model"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "int",
            "placeholder": "0",
            "optional": true,
            "editable": true,
            "advanced": true,
            "hidden": false,
            "codedata": {
              "kind": "DEFAULTABLE",
              "originalName": "maxTokens"
            },
            "typeMembers": [
              {
                "type": "int",
                "packageInfo": "",
                "kind": "BASIC_TYPE",
                "selected": false
              }
            ]
          },
          "temperature": {
            "metadata": {
              "label": "Temperature",
              "description": "The temperature for controlling randomness in the model's output  "
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "decimal",
            "placeholder": "0.0d",
            "optional": true,
            "editable": true,
            "advanced": true,
            "hidden": false,
            "codedata": {
              "kind": "DEFAULTABLE",
              "originalName": "temperature"
            },
            "typeMembers": [
              {
                "type": "decimal",
                "packageInfo": "",
                "kind": "BASIC_TYPE",
                "selected": false
              }
            ]
          },
          "timeout": {
            "metadata": {
              "label": "Timeout",
              "description": "The maximum time to wait (in seconds) for a response before closing the connection"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "decimal",
            "placeholder": "0.0d",
            "optional": true,
            "editable": true,
            "advanced": true,
            "hidden": false,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "timeout"
            },
            "typeMembers": [
              {
                "type": "decimal",
                "packageInfo": "",
                "kind": "BASIC_TYPE",
                "selected": false
              }
            ]
          },
          "forwarded": {
            "metadata": {
              "label": "Forwarded",
              "description": "The choice of setting `forwarded`/`x-forwarded` header"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "string",
            "placeholder": "\"\"",
            "optional": true,
            "editable": true,
            "advanced": true,
            "hidden": false,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "forwarded"
            },
            "typeMembers": [
              {
                "type": "string",
                "packageInfo": "",
                "kind": "BASIC_TYPE",
                "selected": false
              }
            ]
          },
          "validation": {
            "metadata": {
              "label": "Payload Validation",
              "description": "Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "boolean",
            "placeholder": "false",
            "optional": true,
            "editable": true,
            "advanced": true,
            "hidden": false,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "validation"
            },
            "typeMembers": [
              {
                "type": "boolean",
                "packageInfo": "",
                "kind": "BASIC_TYPE",
                "selected": false
              }
            ]
          },
          "checkError": {
            "metadata": {
              "label": "Check Error",
              "description": "Terminate on error"
            },
            "valueType": "FLAG",
            "value": true,
            "optional": false,
            "editable": false,
            "advanced": true,
            "hidden": false
          },
          "scope": {
            "metadata": {
              "label": "Connection Scope",
              "description": "Scope of the connection, Global or Local"
            },
            "valueType": "ENUM",
            "value": "Service",
            "optional": false,
            "editable": true,
            "advanced": true,
            "hidden": false
          }
        },
        "flags": 1
      },
      {
        "id": "41023",
        "metadata": {
          "label": "Agent",
          "description": "Represents an agent.",
          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerinax_ai_1.1.0.png"
        },
        "codedata": {
          "node": "AGENT",
          "org": "ballerinax",
          "module": "ai",
          "object": "Agent",
          "symbol": "init",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 9,
              "offset": 8
            },
            "endLine": {
              "line": 12,
              "offset": 10
            }
          },
          "sourceCode": "self._AgentServiceAgent = check new (systemPrompt = {role: \"\", instructions: string ``},\n            model = self._AgentServiceModel,\n            tools = []\n        );"
        },
        "returning": false,
        "properties": {
          "systemPrompt": {
            "metadata": {
              "label": "System Prompt",
              "description": "The system prompt assigned to the agent"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "ai:SystemPrompt",
            "value": "{role: \"\", instructions: string ``}",
            "placeholder": "{role: \"\", instructions: \"\"}",
            "optional": false,
            "editable": true,
            "advanced": false,
            "hidden": false,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "systemPrompt"
            },
            "typeMembers": [
              {
                "type": "SystemPrompt",
                "packageInfo": "ballerinax:ai:1.1.0",
                "kind": "RECORD_TYPE",
                "selected": true
              }
            ]
          },
          "model": {
            "metadata": {
              "label": "Model",
              "description": "The model used by the agent"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "ai:ModelProvider",
            "value": "self._AgentServiceModel",
            "placeholder": "object {}",
            "optional": false,
            "editable": true,
            "advanced": false,
            "hidden": false,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "model"
            },
            "typeMembers": [
              {
                "type": "ModelProvider",
                "packageInfo": "ballerinax:ai:1.1.0",
                "kind": "OBJECT_TYPE",
                "selected": false
              }
            ]
          },
          "tools": {
            "metadata": {
              "label": "Tools",
              "description": "The tools available for the agent"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "(ai:BaseToolKit|ai:ToolConfig|ai:FunctionTool)[]",
            "value": "[]\n",
            "placeholder": "[]",
            "optional": true,
            "editable": true,
            "advanced": true,
            "hidden": false,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "tools"
            },
            "typeMembers": [
              {
                "type": "BaseToolKit|ai",
                "packageInfo": "",
                "kind": "ARRAY_TYPE",
                "selected": false
              }
            ]
          },
          "agentType": {
            "metadata": {
              "label": "Agent Type",
              "description": "Type of the agent"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "ai:AgentType",
            "placeholder": "\"FUNCTION_CALL_AGENT\"",
            "optional": true,
            "editable": true,
            "advanced": true,
            "hidden": false,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "agentType"
            },
            "typeMembers": [
              {
                "type": "AgentType",
                "packageInfo": "ballerinax:ai:1.1.0",
                "kind": "BASIC_TYPE",
                "selected": false
              }
            ]
          },
          "maxIter": {
            "metadata": {
              "label": "Maximum Iterations",
              "description": "The maximum number of iterations the agent performs to complete the task"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "int",
            "placeholder": "0",
            "optional": true,
            "editable": true,
            "advanced": true,
            "hidden": false,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "maxIter"
            },
            "typeMembers": [
              {
                "type": "int",
                "packageInfo": "",
                "kind": "BASIC_TYPE",
                "selected": false
              }
            ]
          },
          "verbose": {
            "metadata": {
              "label": "Verbose",
              "description": "Specifies whether verbose logging is enabled"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "boolean",
            "placeholder": "false",
            "optional": true,
            "editable": true,
            "advanced": true,
            "hidden": false,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "verbose"
            },
            "typeMembers": [
              {
                "type": "boolean",
                "packageInfo": "",
                "kind": "BASIC_TYPE",
                "selected": false
              }
            ]
          },
          "memory": {
            "metadata": {
              "label": "Memory",
              "description": "The memory used by the agent to store and manage conversation history"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "ai:Memory|()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "hidden": false,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "memory"
            },
            "typeMembers": [
              {
                "type": "Memory",
                "packageInfo": "ballerinax:ai:1.1.0",
                "kind": "OBJECT_TYPE",
                "selected": false
              },
              {
                "type": "()",
                "packageInfo": "",
                "kind": "BASIC_TYPE",
                "selected": false
              }
            ]
          },
          "checkError": {
            "metadata": {
              "label": "Check Error",
              "description": "Terminate on error"
            },
            "valueType": "FLAG",
            "value": true,
            "optional": false,
            "editable": false,
            "advanced": true,
            "hidden": false
          },
          "scope": {
            "metadata": {
              "label": "Connection Scope",
              "description": "Scope of the connection, Global or Local"
            },
            "valueType": "ENUM",
            "value": "Service",
            "optional": false,
            "editable": true,
            "advanced": true,
            "hidden": false
          }
        },
        "flags": 1
      }
    ]
  }
}
